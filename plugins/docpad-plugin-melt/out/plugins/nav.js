// Generated by CoffeeScript 1.6.3
(function() {
  var YAML, fs, getObj, initNav, main, navRoot, nvaRoot, _;

  fs = require("fs");

  YAML = require("js-yaml");

  _ = require("underscore");

  nvaRoot = null;

  main = null;

  navRoot = null;

  getObj = function(fileName) {
    return YAML.load(fs.readFileSync("" + navRoot + "/" + fileName, "utf8"));
  };

  initNav = function() {
    var loopNav;
    main = getObj("main.yml");
    if (!main) {
      throw new Error("no main.yml for nav");
      return;
    }
    loopNav = function(data) {
      var error, newData, url;
      if (typeof data === "object") {
        _.each(data, function(item, _key) {
          return data[_key] = loopNav(item);
        });
        return data;
      } else if (typeof data === "string" && data.indexOf("load:") === 0) {
        url = data.split("load:")[1];
        try {
          newData = getObj(url);
          return loopNav(newData);
        } catch (_error) {
          error = _error;
          console.warn(error);
          return console.warn("This is happening because it's trying to load a yaml file that doesn't exist in the nav folder. Please check the line \"load:\" in your nav yaml files");
        }
      } else {
        return data;
      }
    };
    return loopNav(main);
  };

  module.exports = {
    events: {
      extendTemplateData: function(_arg, next) {
        var templateData;
        templateData = _arg.templateData;
        navRoot = "" + this.docpad.config.rootPath + "/src/navs";
        templateData.nav = initNav();
        return next();
      },
      renderBefore: function(_arg, next) {
        var collection, templateData;
        collection = _arg.collection, templateData = _arg.templateData;
        collection.models.forEach(function(item) {
          if (item.attributes.fullDirPath === navRoot) {
            return templateData.nav = initNav();
          }
        });
        return next();
      }
    }
  };

}).call(this);
